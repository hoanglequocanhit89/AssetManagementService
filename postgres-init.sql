CREATE TYPE ASSET_STATUS AS ENUM (
	'AVAILABLE',
	'NOT_AVAILABLE',
	'RECYCLED',
	'WAITING',
	'ASSIGNED'
);

CREATE TYPE GENDER AS ENUM (
    'MALE',
    'FEMALE'
);

CREATE TYPE ASSIGNMENT_STATUS AS ENUM (
	'WAITING',
    'DECLINED',
    'RETURNED',
	'ACCEPTED'
);

CREATE TYPE RETURNING_STATUS AS ENUM (
	'WAITING',
	'COMPLETED'
);

CREATE TABLE "user_profiles" (
                                 "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 "first_name" VARCHAR(128) NOT NULL,
                                 "last_name" VARCHAR(128) NOT NULL,
                                 "dob" DATE NOT NULL,
                                 "gender" GENDER DEFAULT null
);COMMENT ON COLUMN user_profiles.dob IS 'must older than 18 years old';
COMMENT ON COLUMN user_profiles.gender IS '1: male, 0: female';


CREATE TABLE "users" (
                         "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         "username" VARCHAR(255) NOT NULL UNIQUE,
                         "password" VARCHAR(255) NOT NULL,
                         "staff_code" CHAR(6) NOT NULL UNIQUE,
                         "role_id" INTEGER NOT NULL,
                         "disabled" BOOLEAN NOT NULL DEFAULT false,
                         "location_id" INTEGER NOT NULL,
                         "joined_date" DATE NOT NULL,
                         "first_login" BOOLEAN NOT NULL DEFAULT true,
                         "created_at" TIMESTAMP NOT NULL,
                         "updated_at" TIMESTAMP NOT NULL,
                         "created_by" INTEGER,
                         "updated_by" INTEGER
);COMMENT ON COLUMN users.username IS 'auto created by first_name + first letter of last_name. If exist, increase number behind
    Ex: first_name: Duy, last_name: Le Hai
    -> user_name = duylh
    if duylh exist -> duylh1++';
COMMENT ON COLUMN users.password IS 'hashed and auto generated and required change after first login';
COMMENT ON COLUMN users.staff_code IS 'prefix: SD for staff';
COMMENT ON COLUMN users.role_id IS 'ADMIN, STAFF';
COMMENT ON COLUMN users.joined_date IS 'must bigger than dob and enough 18 years old';
COMMENT ON COLUMN users.first_login IS 'required change password if first time login';
COMMENT ON COLUMN users.created_by IS 'for audit';
COMMENT ON COLUMN users.updated_by IS 'for audit';


CREATE TABLE "assets" (
                          "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          "name" VARCHAR(255) NOT NULL,
                          "specification" VARCHAR(255) NOT NULL,
                          "installed_date" DATE NOT NULL,
                          "asset_code" CHAR(8) NOT NULL UNIQUE,
                          "disabled" BOOLEAN NOT NULL DEFAULT false,
                          "status" ASSET_STATUS NOT NULL,
                          "location_id" INTEGER NOT NULL,
                          "category_id" INTEGER NOT NULL,
                          "created_at" TIMESTAMP NOT NULL,
                          "updated_at" TIMESTAMP NOT NULL,
                          "created_by" INTEGER,
                          "updated_by" INTEGER
);COMMENT ON COLUMN assets.asset_code IS 'prefix with category prefix';
COMMENT ON COLUMN assets.status IS 'available, not available, waiting for recycling, assigned, recycled';
COMMENT ON COLUMN assets.created_by IS 'for audit';
COMMENT ON COLUMN assets.updated_by IS 'for audit';


CREATE TABLE "assignments" (
                               "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               "asset_id" INTEGER NOT NULL,
                               "assigned_by" INTEGER NOT NULL,
                               "assigned_to" INTEGER NOT NULL,
                               "assigned_date" DATE NOT NULL,
                               "status" ASSIGNMENT_STATUS NOT NULL,
                               "note" VARCHAR(255)
);COMMENT ON COLUMN assignments.status IS 'waiting for acceptance, accepted';


CREATE TABLE "categories" (
                              "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              "name" VARCHAR(128) NOT NULL,
                              "prefix" CHAR(2) NOT NULL UNIQUE
);

CREATE TABLE "returning_requests" (
                                      "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      "assignment_id" INTEGER NOT NULL UNIQUE,
                                      "requested_by" INTEGER NOT NULL,
                                      "accepted_by" INTEGER NULL,
                                      "returned_date" DATE NOT NULL,
                                      "status" RETURNING_STATUS NOT NULL
);COMMENT ON COLUMN returning_requests.status IS 'waiting for returning, completed';


CREATE TABLE "locations" (
                             "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             "name" VARCHAR(64) NOT NULL
);COMMENT ON COLUMN locations.name IS 'DN, HN, HCM';


CREATE TABLE "roles" (
                         "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         "name" VARCHAR(64) NOT NULL
);COMMENT ON COLUMN roles.name IS 'ADMIN, STAFF';

ALTER TABLE "user_profiles"
    ADD FOREIGN KEY("id") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assets"
    ADD FOREIGN KEY("category_id") REFERENCES "categories"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assignments"
    ADD FOREIGN KEY("asset_id") REFERENCES "assets"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "returning_requests"
    ADD FOREIGN KEY("assignment_id") REFERENCES "assignments"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assets"
    ADD FOREIGN KEY("location_id") REFERENCES "locations"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "users"
    ADD FOREIGN KEY("location_id") REFERENCES "locations"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assets"
    ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assets"
    ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "users"
    ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "users"
    ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assignments"
    ADD FOREIGN KEY("assigned_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "assignments"
    ADD FOREIGN KEY("assigned_to") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "returning_requests"
    ADD FOREIGN KEY("requested_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "users"
    ADD FOREIGN KEY("role_id") REFERENCES "roles"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "returning_requests"
    ADD FOREIGN KEY("accepted_by") REFERENCES "users"("id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;